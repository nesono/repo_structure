module(
    name = "repo_structure",
    version = "0.1",
)

PYTHON_VERSION = "3.12"

bazel_dep(name = "rules_python", version = "0.33.2")

# Initialize the python toolchain using the extension.
python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    configure_coverage_tool = True,
    python_version = PYTHON_VERSION,
)

# This extension allows a user to create modifications to how rules_python
# creates different wheel repositories.  Different attributes allow the user
# to modify the BUILD file, and copy files.
# See @rules_python//python/extensions:whl_mods.bzl attributes for more information
# on each of the attributes.
# You are able to set a hub name, so that you can have different modifications of the same
# wheel in different pip hubs.
pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")

# To fetch pip dependencies, use pip.parse. We can pass in various options,
# but typically we pass requirements and the Python version. The Python
# version must have been configured by a corresponding `python.toolchain()`
# call.
# Alternatively, `python_interpreter_target` can be used to directly specify
# the Python interpreter to run to resolve dependencies.
pip.parse(
    hub_name = "pypi",
    python_version = PYTHON_VERSION,
    requirements_lock = "//:requirements_lock.txt",
)
use_repo(pip, "pypi")

